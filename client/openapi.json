{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Tasks API"
  },
  "components": {
    "schemas": {},
    "parameters": {}
  },
  "paths": {
    "/": {
      "get": {
        "tags": ["Index"],
        "operationId": "lists",
        "responses": {
          "200": {
            "description": "Tasks API Index",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"],
                  "example": {
                    "message": "Tasks API"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "tags": ["Tasks"],
        "operationId": "listTasks",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            },
            "required": false,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of tasks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "minimum": 0,
                            "exclusiveMinimum": true
                          },
                          "name": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 500
                          },
                          "done": {
                            "type": "boolean"
                          },
                          "createdAt": {
                            "type": "string",
                            "nullable": true
                          },
                          "updatedAt": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": ["id", "name", "done", "createdAt", "updatedAt"]
                      }
                    },
                    "total": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "page": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "pageSize": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "totalPages": {
                      "type": "integer",
                      "minimum": 0
                    }
                  },
                  "required": ["data", "total", "page", "pageSize", "totalPages"]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Tasks"],
        "operationId": "createTask",
        "requestBody": {
          "description": "The task to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 500
                  },
                  "done": {
                    "type": "boolean"
                  }
                },
                "required": ["name", "done"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created task",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "name": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 500
                    },
                    "done": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "updatedAt": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": ["id", "name", "done", "createdAt", "updatedAt"]
                }
              }
            }
          },
          "422": {
            "description": "The validation error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "issues": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": ["code", "path"]
                          }
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": ["issues", "name"],
                      "example": {
                        "issues": [
                          {
                            "code": "invalid_type",
                            "expected": "string",
                            "received": "undefined",
                            "path": ["name"],
                            "message": "Required"
                          },
                          {
                            "code": "invalid_type",
                            "expected": "boolean",
                            "received": "undefined",
                            "path": ["done"],
                            "message": "Required"
                          }
                        ],
                        "name": "ZodError"
                      }
                    }
                  },
                  "required": ["success", "error"]
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": ["Tasks"],
        "operationId": "getTaskById",
        "parameters": [
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "required": ["id"],
              "example": 42
            },
            "required": false,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested task",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "name": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 500
                    },
                    "done": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "updatedAt": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": ["id", "name", "done", "createdAt", "updatedAt"]
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"],
                  "example": {
                    "message": "Not Found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid id error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "issues": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": ["code", "path"]
                          }
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": ["issues", "name"],
                      "example": {
                        "issues": [
                          {
                            "code": "invalid_type",
                            "expected": "number",
                            "received": "nan",
                            "path": ["id"],
                            "message": "Expected number, received nan"
                          }
                        ],
                        "name": "ZodError"
                      }
                    }
                  },
                  "required": ["success", "error"]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Tasks"],
        "operationId": "updateTaskById",
        "parameters": [
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "required": ["id"],
              "example": 42
            },
            "required": false,
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "description": "The task updates",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 500
                  },
                  "done": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated task",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "name": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 500
                    },
                    "done": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string",
                      "nullable": true
                    },
                    "updatedAt": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": ["id", "name", "done", "createdAt", "updatedAt"]
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"],
                  "example": {
                    "message": "Not Found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "The validation error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "issues": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "path": {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "number"
                                        }
                                      ]
                                    }
                                  },
                                  "message": {
                                    "type": "string"
                                  }
                                },
                                "required": ["code", "path"]
                              }
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": ["issues", "name"]
                        }
                      },
                      "required": ["success", "error"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "example": false
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "issues": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "path": {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "number"
                                        }
                                      ]
                                    }
                                  },
                                  "message": {
                                    "type": "string"
                                  }
                                },
                                "required": ["code", "path"]
                              }
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": ["issues", "name"],
                          "example": {
                            "issues": [
                              {
                                "code": "invalid_type",
                                "expected": "number",
                                "received": "nan",
                                "path": ["id"],
                                "message": "Expected number, received nan"
                              }
                            ],
                            "name": "ZodError"
                          }
                        }
                      },
                      "required": ["success", "error"]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "operationId": "deleteTaskById",
        "parameters": [
          {
            "schema": {
              "type": "number",
              "nullable": true,
              "required": ["id"],
              "example": 42
            },
            "required": false,
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Task deleted"
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["message"],
                  "example": {
                    "message": "Not Found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid id error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "issues": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": ["code", "path"]
                          }
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": ["issues", "name"],
                      "example": {
                        "issues": [
                          {
                            "code": "invalid_type",
                            "expected": "number",
                            "received": "nan",
                            "path": ["id"],
                            "message": "Expected number, received nan"
                          }
                        ],
                        "name": "ZodError"
                      }
                    }
                  },
                  "required": ["success", "error"]
                }
              }
            }
          }
        }
      }
    }
  }
}
